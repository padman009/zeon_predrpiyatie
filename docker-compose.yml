version: '3.8'
services:

  # Nginx контейнер для вебсервера
  nginx:
    # Используем готовый образ для nginx контейнера
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "${NGINX_PUBLIC_PORT}:80" # Внутренний порт контейнера пробрасываем на host машину
    volumes:
      - ${ROOT_PATH}:/var/www # Пробрасываем локальную папку backend в контейнер как /var/www
      - ${ROOT_PATH}/nginx/conf.d/:/etc/nginx/conf.d/ # Передаем в контейнер конфигурационные файлы nginx
    depends_on:
      - backend
    networks:
      - internal

  # Backend контейнер для php
  backend:
    image: php
    # Для установки нужных пакетов используем не чистый образ, а инструкции из конкретного файла Dockerfile
    build:
      context: ${ROOT_PATH}
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - ${PHP_PORT}
    tty: true
    working_dir: /var/www
    volumes:
      - ${ROOT_PATH}:/var/www
      - ${ROOT_PATH}/php.ini:/usr/local/etc/php/php.ini
    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres

  postgres:
    image: postgres:15.3
    restart: always
    environment:
      POSTGRES_DB: "laravel"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/db-files/
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ${ROOT_PATH}/postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ${ROOT_PATH}/postgres/pg_hba.conf:/var/lib/pgsql/data/pg_hba.conf
      - ${ROOT_PATH}/postgres/pg-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PUBLIC_PORT}:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PUBLIC_PORT}:8080

networks:
  internal:
    driver: bridge

# Тома
volumes:
  # Чтобы данные БД не пропадали после выключения создаем именованный том
  pdbdata:
    driver: local
